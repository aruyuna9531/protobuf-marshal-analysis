// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v4.25.1
// source: test.proto

package test

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DayOfWeek int32

const (
	DayOfWeek_MONDAY    DayOfWeek = 0
	DayOfWeek_TUESDAY   DayOfWeek = 1
	DayOfWeek_WEDNESDAY DayOfWeek = 2
	DayOfWeek_THRUSDAY  DayOfWeek = 3
	DayOfWeek_FRIDAY    DayOfWeek = 4
	DayOfWeek_SATURDAY  DayOfWeek = 5
	DayOfWeek_SUNDAY    DayOfWeek = 6
)

// Enum value maps for DayOfWeek.
var (
	DayOfWeek_name = map[int32]string{
		0: "MONDAY",
		1: "TUESDAY",
		2: "WEDNESDAY",
		3: "THRUSDAY",
		4: "FRIDAY",
		5: "SATURDAY",
		6: "SUNDAY",
	}
	DayOfWeek_value = map[string]int32{
		"MONDAY":    0,
		"TUESDAY":   1,
		"WEDNESDAY": 2,
		"THRUSDAY":  3,
		"FRIDAY":    4,
		"SATURDAY":  5,
		"SUNDAY":    6,
	}
)

func (x DayOfWeek) Enum() *DayOfWeek {
	p := new(DayOfWeek)
	*p = x
	return p
}

func (x DayOfWeek) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DayOfWeek) Descriptor() protoreflect.EnumDescriptor {
	return file_test_proto_enumTypes[0].Descriptor()
}

func (DayOfWeek) Type() protoreflect.EnumType {
	return &file_test_proto_enumTypes[0]
}

func (x DayOfWeek) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DayOfWeek.Descriptor instead.
func (DayOfWeek) EnumDescriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{0}
}

type Child struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chile int64 `protobuf:"zigzag64,1,opt,name=chile,proto3" json:"chile,omitempty"`
}

func (x *Child) Reset() {
	*x = Child{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Child) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Child) ProtoMessage() {}

func (x *Child) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Child.ProtoReflect.Descriptor instead.
func (*Child) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{0}
}

func (x *Child) GetChile() int64 {
	if x != nil {
		return x.Chile
	}
	return 0
}

type Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fint32    int32            `protobuf:"varint,1,opt,name=fint32,proto3" json:"fint32,omitempty"`                                                                                       // 通常32为整型
	Fint64    int64            `protobuf:"varint,2,opt,name=fint64,proto3" json:"fint64,omitempty"`                                                                                       // 通常64位整型
	Fuint32   uint32           `protobuf:"varint,3,opt,name=fuint32,proto3" json:"fuint32,omitempty"`                                                                                     // 无符号32位整型
	Fuint64   uint64           `protobuf:"varint,4,opt,name=fuint64,proto3" json:"fuint64,omitempty"`                                                                                     // 无符号64位整型
	Fsint32   int32            `protobuf:"zigzag32,5,opt,name=fsint32,proto3" json:"fsint32,omitempty"`                                                                                   // 有符号32位整型
	Fsint64   int64            `protobuf:"zigzag64,6,opt,name=fsint64,proto3" json:"fsint64,omitempty"`                                                                                   // 无符号64位整型
	Ffixed32  uint32           `protobuf:"fixed32,7,opt,name=ffixed32,proto3" json:"ffixed32,omitempty"`                                                                                  // 定长32位整型
	Ffixed64  uint64           `protobuf:"fixed64,8,opt,name=ffixed64,proto3" json:"ffixed64,omitempty"`                                                                                  // 定长64位整型
	Fdouble   float64          `protobuf:"fixed64,9,opt,name=fdouble,proto3" json:"fdouble,omitempty"`                                                                                    // 64位浮点型
	Ffloat    float32          `protobuf:"fixed32,10,opt,name=ffloat,proto3" json:"ffloat,omitempty"`                                                                                     // 32位浮点型
	Fbool     bool             `protobuf:"varint,11,opt,name=fbool,proto3" json:"fbool,omitempty"`                                                                                        // 布尔
	Fenum     DayOfWeek        `protobuf:"varint,12,opt,name=fenum,proto3,enum=test.DayOfWeek" json:"fenum,omitempty"`                                                                    // 枚举型
	Fmessage  *Child           `protobuf:"bytes,13,opt,name=fmessage,proto3" json:"fmessage,omitempty"`                                                                                   // 结构体
	Fmap      map[uint32]int32 `protobuf:"bytes,14,rep,name=fmap,proto3" json:"fmap,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // map
	Frepeat   []bool           `protobuf:"varint,15,rep,packed,name=frepeat,proto3" json:"frepeat,omitempty"`                                                                             // 数组
	Fstring   string           `protobuf:"bytes,16,opt,name=fstring,proto3" json:"fstring,omitempty"`                                                                                     // 字符串
	Fbytes    []byte           `protobuf:"bytes,17,opt,name=fbytes,proto3" json:"fbytes,omitempty"`                                                                                       // byte数组
	Fsfixed32 int32            `protobuf:"fixed32,18,opt,name=fsfixed32,proto3" json:"fsfixed32,omitempty"`                                                                               // 定长32位有符号
	Fsfixed64 int64            `protobuf:"fixed64,19,opt,name=fsfixed64,proto3" json:"fsfixed64,omitempty"`                                                                               // 定长64位有符号
}

func (x *Msg) Reset() {
	*x = Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{1}
}

func (x *Msg) GetFint32() int32 {
	if x != nil {
		return x.Fint32
	}
	return 0
}

func (x *Msg) GetFint64() int64 {
	if x != nil {
		return x.Fint64
	}
	return 0
}

func (x *Msg) GetFuint32() uint32 {
	if x != nil {
		return x.Fuint32
	}
	return 0
}

func (x *Msg) GetFuint64() uint64 {
	if x != nil {
		return x.Fuint64
	}
	return 0
}

func (x *Msg) GetFsint32() int32 {
	if x != nil {
		return x.Fsint32
	}
	return 0
}

func (x *Msg) GetFsint64() int64 {
	if x != nil {
		return x.Fsint64
	}
	return 0
}

func (x *Msg) GetFfixed32() uint32 {
	if x != nil {
		return x.Ffixed32
	}
	return 0
}

func (x *Msg) GetFfixed64() uint64 {
	if x != nil {
		return x.Ffixed64
	}
	return 0
}

func (x *Msg) GetFdouble() float64 {
	if x != nil {
		return x.Fdouble
	}
	return 0
}

func (x *Msg) GetFfloat() float32 {
	if x != nil {
		return x.Ffloat
	}
	return 0
}

func (x *Msg) GetFbool() bool {
	if x != nil {
		return x.Fbool
	}
	return false
}

func (x *Msg) GetFenum() DayOfWeek {
	if x != nil {
		return x.Fenum
	}
	return DayOfWeek_MONDAY
}

func (x *Msg) GetFmessage() *Child {
	if x != nil {
		return x.Fmessage
	}
	return nil
}

func (x *Msg) GetFmap() map[uint32]int32 {
	if x != nil {
		return x.Fmap
	}
	return nil
}

func (x *Msg) GetFrepeat() []bool {
	if x != nil {
		return x.Frepeat
	}
	return nil
}

func (x *Msg) GetFstring() string {
	if x != nil {
		return x.Fstring
	}
	return ""
}

func (x *Msg) GetFbytes() []byte {
	if x != nil {
		return x.Fbytes
	}
	return nil
}

func (x *Msg) GetFsfixed32() int32 {
	if x != nil {
		return x.Fsfixed32
	}
	return 0
}

func (x *Msg) GetFsfixed64() int64 {
	if x != nil {
		return x.Fsfixed64
	}
	return 0
}

var File_test_proto protoreflect.FileDescriptor

var file_test_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x74, 0x65,
	0x73, 0x74, 0x22, 0x1d, 0x0a, 0x05, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x68, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c,
	0x65, 0x22, 0xd7, 0x04, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x66, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x75, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x75, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07,
	0x66, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x73, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x66, 0x73, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x07, 0x52, 0x08, 0x66, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x08, 0x66, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x64, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x66, 0x64, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x62, 0x6f, 0x6f,
	0x6c, 0x12, 0x25, 0x0a, 0x05, 0x66, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65,
	0x6b, 0x52, 0x05, 0x66, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x27, 0x0a, 0x08, 0x66, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x08, 0x66, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x27, 0x0a, 0x04, 0x66, 0x6d, 0x61, 0x70, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x46, 0x6d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x66, 0x6d, 0x61, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x08, 0x52, 0x07, 0x66, 0x72, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x66, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x73, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x33, 0x32, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x09, 0x66, 0x73, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x33, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36,
	0x34, 0x18, 0x13, 0x20, 0x01, 0x28, 0x10, 0x52, 0x09, 0x66, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x36, 0x34, 0x1a, 0x37, 0x0a, 0x09, 0x46, 0x6d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x67, 0x0a, 0x09, 0x44,
	0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x4f, 0x4e, 0x44,
	0x41, 0x59, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x55, 0x45, 0x53, 0x44, 0x41, 0x59, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x45, 0x44, 0x4e, 0x45, 0x53, 0x44, 0x41, 0x59, 0x10, 0x02,
	0x12, 0x0c, 0x0a, 0x08, 0x54, 0x48, 0x52, 0x55, 0x53, 0x44, 0x41, 0x59, 0x10, 0x03, 0x12, 0x0a,
	0x0a, 0x06, 0x46, 0x52, 0x49, 0x44, 0x41, 0x59, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x41,
	0x54, 0x55, 0x52, 0x44, 0x41, 0x59, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x55, 0x4e, 0x44,
	0x41, 0x59, 0x10, 0x06, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_test_proto_rawDescOnce sync.Once
	file_test_proto_rawDescData = file_test_proto_rawDesc
)

func file_test_proto_rawDescGZIP() []byte {
	file_test_proto_rawDescOnce.Do(func() {
		file_test_proto_rawDescData = protoimpl.X.CompressGZIP(file_test_proto_rawDescData)
	})
	return file_test_proto_rawDescData
}

var file_test_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_test_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_test_proto_goTypes = []interface{}{
	(DayOfWeek)(0), // 0: test.DayOfWeek
	(*Child)(nil),  // 1: test.Child
	(*Msg)(nil),    // 2: test.msg
	nil,            // 3: test.msg.FmapEntry
}
var file_test_proto_depIdxs = []int32{
	0, // 0: test.msg.fenum:type_name -> test.DayOfWeek
	1, // 1: test.msg.fmessage:type_name -> test.Child
	3, // 2: test.msg.fmap:type_name -> test.msg.FmapEntry
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_test_proto_init() }
func file_test_proto_init() {
	if File_test_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_test_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Child); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_test_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_test_proto_goTypes,
		DependencyIndexes: file_test_proto_depIdxs,
		EnumInfos:         file_test_proto_enumTypes,
		MessageInfos:      file_test_proto_msgTypes,
	}.Build()
	File_test_proto = out.File
	file_test_proto_rawDesc = nil
	file_test_proto_goTypes = nil
	file_test_proto_depIdxs = nil
}
